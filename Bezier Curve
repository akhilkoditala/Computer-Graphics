#include <GL/gl.h>
    #include <GL/glu.h>
    #include <stdlib.h>
    #include <GL/glut.h>

    GLfloat ctrlpoints1[4][3] = {
            { 3.0, 1.0, 0.0}, { 4.0, 2.0, 0.0},
            {6.0, 0.0, 0.0}, {7.0, 2.0, 0.0}};

    GLfloat ctrlpoints2[4][3] = {
            { 2.4, -1.2, 0.0}, { 2.6, 0.0, 0.0},
            {2.4, 0.5, 0.0}, {3.0, 1.0, 0.0}};

    void init(void)
    {
       glClearColor(0.0, 0.0, 0.0, 0.0);
       glShadeModel(GL_FLAT);
       glMap1f(GL_MAP1_VERTEX_3, 0.0, 1.0, 3, 4, &ctrlpoints1[0][0]);
       glMap1f(GL_MAP2_VERTEX_3, 0.0, 1.0, 3, 4, &ctrlpoints2[0][0]);
       glEnable(GL_MAP1_VERTEX_3);
       glEnable(GL_MAP2_VERTEX_3);

    }

    void display(void)
    {
       int i;

       glClear(GL_COLOR_BUFFER_BIT);
       glColor3f(1.0, 0.0, 1.0);
       glBegin(GL_LINE_STRIP);
          for (i = -10; i <= 30; i++)
             glEvalCoord1f((GLfloat) i/30.0);
       glEnd();

       glPointSize(5.0);
       glColor3f(0.0, 1.0, 0.0);
       glBegin(GL_POINTS);
          for (i = 0; i < 4; i++)
             glVertex3fv(&ctrlpoints1[i][0]);
		glEnd();
		glColor3f(0.0,1.0,1.0);
		glBegin(GL_POINTS);
          for (i = 0; i < 4; i++)
             glVertex3fv(&ctrlpoints2[i][0]);
       glEnd();
       glFlush();
    }

    void reshape(int w, int h)
    {
       glViewport(0, 0, (GLsizei) w, (GLsizei) h);
       glMatrixMode(GL_PROJECTION);
       glLoadIdentity();
       if (w <= h)
          glOrtho(-5.0, 5.0, -5.0*(GLfloat)h/(GLfloat)w,
                   5.0*(GLfloat)h/(GLfloat)w, -5.0, 5.0);
       else
          glOrtho(-5.0*(GLfloat)w/(GLfloat)h,
                   5.0*(GLfloat)w/(GLfloat)h, -5.0, 5.0, -5.0, 5.0);
       glMatrixMode(GL_MODELVIEW);
       glLoadIdentity();
    }

    int main(int argc, char** argv)
    {
       glutInit(&argc, argv);
       glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
       glutInitWindowSize (1000,600);
       glutInitWindowPosition (150, 150);
       glutCreateWindow ("Bezier Curve");
       init ();
       glutDisplayFunc(display);
       glutReshapeFunc(reshape);
       glutMainLoop();
       return 0;
    }
