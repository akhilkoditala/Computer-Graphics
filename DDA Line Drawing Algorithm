#include <GL/glut.h>
#include <GL/gl.h>
#include <stdio.h>

void init(void)
{
	glClearColor(0.0,0.0,0.0,0.0);
	glMatrixMode(GL_PROJECTION);
	gluOrtho2D(0.0,200.0,0.0,150.0);
}

void line(void)
{
	int dx,dy,steps,x1,y1,x2,y2,i;
	float xi,yi,x,y;
	printf("Enter the Starting points : ");
	scanf("%d %d",&x1,&y1);
	printf("Enter the Ending points : ");
	scanf("%d %d",&x2,&y2);
	dx = x2-x1;
	dy = y2-y1;
	if (abs(dx) > abs(dy))
		steps = abs(dx);
    else
		steps = abs(dy);
	xi = dx / (float) steps;
    yi = dy / (float) steps;
    x = x1;
    y = y1;
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(0.0,1.0,0.0);
	glBegin(GL_POINTS);
		glVertex2d(x,y);
    	for(i=0;i<steps;i++){
    		x = x + xi;
    		y = y + yi;
    		glVertex2d(x,y);
    }
	glEnd();
	glFlush();
}

void main(int argc,char** argv){
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
	glutInitWindowPosition(50,100);
	glutInitWindowSize(400,300);
	glutCreateWindow("An Example of DDA Algorithm");
	init();
	glutDisplayFunc(line);
	glutMainLoop();
	}
	
